<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- mongodb cluster logger off-->
    <logger name="org.mongodb.driver.cluster" level="OFF" />
    <!-- mongodb cluster protocol.command off-->
    <logger name="org.mongodb.driver.protocol.command" level="OFF" />


    <springProfile name="local">

        <logger name="com.zaxxer.hikari" level="OFF"/>
        <logger name="com.zaxxer.hikari.HikariConfig" level="OFF"/>
        <logger name="com.zaxxer.hikari.pool.PoolBase" level="ERROR"/>
        <logger name="com.zaxxer.hikari.pool.HikariPool" level="ERROR"/>
        <logger name="com.zaxxer.hikari.HikariDataSource" level="ERROR"/>

        <!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
        <logger name="jdbc.connection" level="OFF"/>

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %m{nolookups}%n</pattern>
            </encoder>
        </appender>

        <root level="debug">
            <appender-ref ref="STDOUT" />
        </root>

    </springProfile>


    <springProfile name="real">
        <!-- log4jdbc 옵션 설정 -->
        <logger name="jdbc" level="OFF"/>
        <!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
        <logger name="jdbc.connection" level="OFF"/>
        <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
        <logger name="jdbc.sqlonly" level="OFF"/>
        <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
        <logger name="jdbc.sqltiming" level="OFF"/>
        <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
        <logger name="jdbc.audit" level="OFF"/>
        <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
        <logger name="jdbc.resultset" level="OFF"/>
        <!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
        <logger name="jdbc.resultsettable" level="OFF"/>

        <!--<logger name="com.zaxxer.hikari" level="OFF"/>
        <logger name="com.zaxxer.hikari.HikariConfig" level="OFF"/>
        <logger name="com.zaxxer.hikari.pool.PoolBase" level="ERROR"/>
        <logger name="com.zaxxer.hikari.pool.HikariPool" level="ERROR"/>
        <logger name="com.zaxxer.hikari.HikariDataSource" level="ERROR"/>-->


        <appender name="previewtyLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <Append>true</Append>
            <encoder>
                <charset>UTF-8</charset>
                <pattern>%m{nolookups}%n</pattern>
            </encoder>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>/data/previewtyApi/logs/previewtyApi.%d{yyyy-MM-dd}.log</fileNamePattern>
            </rollingPolicy>
        </appender>

        <logger name="com.morpheus.previewtyapi.util.ResCode" level="info" additivity="false">
            <appender-ref ref="previewtyLog"/>
        </logger>

    </springProfile>


    <springProfile name="dev">

        <appender name="previewtyLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <Append>true</Append>
            <encoder>
                <charset>UTF-8</charset>
                <pattern>%m{nolookups}%n</pattern>
            </encoder>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>/home/servers/previewtyApi/logs/previewtyApi.%d{yyyy-MM-dd}.log</fileNamePattern>
            </rollingPolicy>
        </appender>

        <logger name="com.morpheus.previewtyapi.util.ResCode" level="info" additivity="false">
            <appender-ref ref="previewtyLog"/>
        </logger>


    </springProfile>

</configuration>